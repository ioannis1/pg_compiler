############################## Helper Variables
- command:      uname -s
  environment:  PATH="/bin:/usr/bin:/usr/local/bin"
  register:     result

- set_fact:     os_family="{{result.stdout}}"

- set_fact:     HOME="/home"
  when:         os_family == "Linux"

- set_fact:     HOME="/Users"
  when:         os_family == "Darwin"

- set_fact:     HOME="/home"
  when:         os_family == "FreeBSD"

- command:      whoami
  environment:  PATH="/bin:/usr/bin:/usr/local/bin"
  register:     WHOAMI
############################################################
- name:        fail unless ansible executing as unix user postgres
  when:        not (  WHOAMI.stdout  == "postgres")
  fail:        msg="Detected '{{ WHOAMI.stdout }}', but must run as 'postgres'"


################### git timescaledb ############################
- name:        git timescaledb
  remote_user: postgres
  become:      yes
  git:  
     repo:       https://github.com/timescale/timescaledb.git
     dest:      "{{ HOME }}/postgres/src/timescaledb"
     #version:   'master'

################### Other Repos ############################

- name:         chown -R ~postgres/src/timescaledb
  become_user:  root
  become:       yes
  command:      chown -R postgres:postgres  ~postgres/src/timescaledb
  environment:  PATH="/bin:/usr/bin:/usr/local/bin"


- name:          update github tiscaledb
  ignore_errors: True
  when:          false
  git:
    repo:       https://github.com/timescale/timescaledb.git
    dest:       "{{ HOME }}/postgres/src/postgres"
    update:     yes
    clone:      no
    force:      yes

################### Configure ############################

- name:        ./configure Debian
  when:        ansible_os_family == 'Debian'
  command:     "./bootstrap -DREGRESS_CHECKS=OFF  chdir={{ HOME }}/postgres/src/timescaledb"


################### Compile postgres ############################
- name:      make
  make:      target="install"      chdir="{{ HOME }}/postgres/src/timescaledb/build" 

